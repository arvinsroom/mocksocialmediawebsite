# multi-stage docker for build and then run production specific
FROM node:13.12.0-alpine as builder1

# this will be temporary working directory
WORKDIR /app/temp

# use docker caching for node_modules
COPY package*.json ./

# install only development dependences
RUN npm install --development

COPY . .

# build a development executable
RUN npm run build-dev


FROM node:13.12.0-alpine as builder2

# this will current working directory
WORKDIR /app/frontend

COPY package*.json ./

# install only the production dependencies
RUN npm install --production

# only copy the prod executables in final image
COPY --from=builder1 /app/temp/dist/ dist/


FROM nginx:alpine

COPY ./nginx.conf /etc/nginx/conf.d/default.conf

## Remove default nginx index page
# RUN rm -rf /usr/share/nginx/html/*

# copy all the compiled production code to nginx html file from react
COPY --from=builder2 /app/frontend/ /usr/share/nginx/html

EXPOSE 80

ENTRYPOINT ["nginx", "-g", "daemon off;"]
